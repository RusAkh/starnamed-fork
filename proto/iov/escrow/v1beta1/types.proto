syntax = "proto3";
package starnamed.x.escrow.v1beta1;

import "iov/starname/v1beta1/types.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/iov-one/starnamed/x/escrow/types";
option (gogoproto.goproto_getters_all) = false;


// Escrow defines the struct of an escrow
message Escrow {
    string id = 1;
    string seller = 2;
    string buyer = 3;
    // TODO: Maybe just (pk, type) ?
    google.protobuf.Any object = 4 [ (cosmos_proto.accepts_interface) = "TransferableObject" ];
    repeated cosmos.base.v1beta1.Coin price = 5 [ (gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins" ];
    EscrowState state = 6;
    uint64 deadline = 7;

    /*
    uint64 timestamp = 9;
    uint64 expiration_height = 10 [ (gogoproto.moretags) = "yaml:\"expiration_height\"" ];*/
}

// EscrowState defines the state of an escrow
enum EscrowState {
    option (gogoproto.goproto_enum_prefix) = true;

    // ESCROW_STATE_OPEN defines an open state.
    ESCROW_STATE_OPEN = 0 [ (gogoproto.enumvalue_customname) = "Open" ];
    // ESCROW_STATE_COMPLETED defines a completed state.
    ESCROW_STATE_COMPLETED = 1 [ (gogoproto.enumvalue_customname) = "Completed" ];
    // ESCROW_STATE_REFUNDED defines a refunded state.
    ESCROW_STATE_REFUNDED = 2 [ (gogoproto.enumvalue_customname) = "Refunded" ];
    // ESCROW_STATE_REFUNDED defines an expired state.
    ESCROW_STATE_EXPIRED = 3 [ (gogoproto.enumvalue_customname) = "Expired" ];
}
